#include<iostream>
#include<cmath>
#include<typeinfo>
#include<algorithm>
using namespace std;
#define PI 3.14
#include<cstdlib>
class shape{
	protected: 
	float area,perimeter,circumference;  
    public:
	shape(){}   
   virtual void initialize(){
   } 
   virtual float computeArea(){
   }
	virtual float computePerimeter(){
	}
	virtual float computecircumference(){
	}
	virtual void display(){
	}
	virtual void compute(){
	}
	virtual void computerand()=0;//pure virtual
	~shape(){} 
};
template<class T>  
class triangle:public shape
{
T a,b,c;

	public:
		triangle(){
		}
	   
		void initialize()
		{
			
			cout<<"Enter the three sides of triangle : ";
			cin>>a>>b>>c;
		}
	
		float computeArea()
		{
			float s;
			s=(a+b+c)/2.0;
			area=sqrt(s*(s-a)*(s-b)*(s-c));
			return area;
		}
		
		float computePerimeter()
		{
			perimeter=a+b+c;
			return perimeter;
			
		}
	
		void display(){
			cout<<"Triangle shape\n"<<"area:"<<computeArea()<<"\nperimeter:"<<computePerimeter()<<"\n\n";
		}
	
		void compute(T i=5,T j=7,T k=9)
		{
			cout<<"Perimeter of triangle (default) is "<<i+j+k<<endl;
			cout<<"Area of triangle (default) is ";
			float s;
			s=(i+j+k)/2.0;
			area=sqrt(s*(s-i)(s-j)(s-k));
			cout<<area<<endl;
		}
		
		void computerand()
		{
			int i=rand()%10;
			int j=rand()%10;
			int k=rand()%10;
			cout<<"Perimeter of triangle (random) is "<<i+j+k<<endl;
			cout<<"Area of triangle (random) is ";
			float s;
			s=(i+j+k)/2.0;
			area=sqrt(s*(s-i)*(s-j)*(s-k));
			cout<<area<<endl;
			
		}
};



template<class T>
class rectangle:public shape{
	T l,b;
	
	public:
		rectangle(){}
		rectangle(const rectangle &r)
		{
			l=r.l;
			b=r.b;
		} 
		void initialize()
		{
			cout<<"Enter the length,breadth of rectangle : ";
			cin>>l>>b;
		}
		float computeArea()
		{
		area=l*b;
		return area;
		}
		float computePerimeter()
		{
		perimeter=2*(l+b);
		return perimeter;
		}
		void display(){
			cout<<"Rectangle shape\n"<<"area:"<<computeArea()<<"\nperimeter:"<<computePerimeter()<<"\n\n";
		}
		void compute(T i=3.5,T j=4.5)
		{
			cout<<"Rectangle area is(default) : "<<i*j<<"\nPerimeter is (default): "<<2*(i+j)<<endl;
		}
		
		void computerand()
		{
			int i=rand()%10;
			int j=rand()%10;
			cout<<"Perimeter of rectangle (random) is "<<2*(i+j)<<endl;
			cout<<"Area of rectangle (random) is "<<i*j<<endl;
		}
};
template<class T>
class square:public shape{
	T side;
	public:
		square(){}
		void initialize()
		{
			cout<<"Enter side\n";
			cin>>side;
		}
		float computePerimeter()
		{
			perimeter=4*side;
			return perimeter;
		}
		float computeArea()
		{
			area=side*side;
			return area;
		}
		void display()
		{
			cout<<"\nArea of square is : "<<computeArea()<<" Perimeter of square is : "<<computePerimeter()<<endl;
		}
		void compute(T i=10)
		{
			cout<<"Square area is(default) : "<<i*i<<"\nPerimeter is (default): "<<4*i<<endl;
		}
		
		void computerand()
		{
			int i=rand()%10;
			cout<<"Perimeter of square (random) is "<<4*i<<endl;
			cout<<"Area of square (random) is "<<i*i<<endl;
		}
};

template<class T>
class circle:public shape{
		T radius;
	public:
		circle(){}
		void initialize()
		{
			cout<<"Enter radius\n";
			cin>>radius;
		}
		float computeCircumference()
		{
			circumference=2*PI*radius;
			return circumference;
		}
		float computeArea()
		{
			area=PI*radius*radius;
			return area;
		}
		void display()
		{
			cout<<"\nArea of circle is : "<<computeArea()<<"\nCircumference of circle is : "<<computeCircumference()<<endl;
		}
			void compute(T i=10)
		{
			cout<<"\nCircle area is(default) : "<<PI*i*i<<"\nPerimeter is (default): "<<2*PI*i<<endl;
		}
		
			void computerand()
		{
			int i=rand()%10;
			cout<<"Circumference of circle (random) is "<<2*PI*i<<endl;
			cout<<"Area of circle (random) is "<<PI*i*i<<endl;
		}
	
};


int main()
	{
		int choice;
		shape *s;
		char ch;
		do{
		cout<<"\n1.Triangle\n2.Rectangle\n3.Square\n4.Circle\n";
		cin>>choice;
		switch(choice)
		{
			case 1:cout<<"\n(Choose the type of measurements)\n1.Int\n2.Double\n3.Default function arguments\n4.Random\n";
			cin>>choice;
			if(choice==1){ 
			triangle <int>ti;
			s=&ti;
			s->initialize();
			s->display();
			cout<<"Type : "<<typeid(*s).name();
		    }
		    else if(choice==2)
		    {
		    triangle<double>ti;
		    s=&ti;
			s->initialize();
			s->display();
			cout<<"Type : "<<typeid(*s).name();
			}
			else if(choice==3)
			{
		
			 triangle<int>ti;
			 	s=&ti;
			 s->compute();	
			}
			else if(choice==4)
			{
			  triangle<int>ti;
			  s=&ti;
			  s->computerand();
			}
			break;
			case 2:cout<<"\n(Choose the type of measurements)\n1.Int\n2.Double\n3.Default function arguments\n4.Random\n";
			cin>>choice;
			if(choice==1){
			rectangle<int>ri;
			s=&ri;
			s->initialize();
			s->display();
			cout<<"Type : "<<typeid(*s).name();
		    }
		    else if(choice==2)
		    {
		    rectangle<double>ri;
		    s=&ri;
			s->initialize();
			s->display();
			cout<<"Type : "<<typeid(ri).name();
			}
			else if(choice==3)
			{
				rectangle<int>ri;
				s=&ri;
				s->compute();
			}
			else if(choice==4)
			{
			  rectangle<int>ri;
			  s=&ri;
			  s->computerand();
			}
			break;
			case 3:cout<<"\n(Choose the type of measurements)\n1.Int\n2.Double\n3.Default function arguments\n4.Random\n";
			cin>>choice;
			if(choice==1){
			square<int>sq;
			s=&sq;
			s->initialize();
			s->display();
			cout<<"Type : "<<typeid(*s).name();
		    }
		    else if(choice==2)
		    {
		    square<double>sq;
		    s=&sq;
			s->initialize();
			s->display();
			cout<<"Type : "<<typeid(*s).name();
			}
			else if(choice==3)
			{
				square<int>sq;
				s=&sq;
				s->compute();
			}
			else if(choice==4)
			{
			  square<int>si;
			  s=&si;
			  s->computerand();
			}
			break;
			case 4:cout<<"\n(Choose the type of measurements)\n1.Int\n2.Double\n3.Default function arguments\n4.Random\n";
			cin>>choice;
			if(choice==1){
			circle<int>c;
			s=&c;
			s->initialize();
			s->display();
			cout<<"Type : "<<typeid(*s).name();
		    }
		    else if(choice==2)
		    {
		    circle<double>c;
		    s=&c;
			s->initialize();
			s->display();
			cout<<"Type : "<<typeid(*s).name();
			}
			else if(choice==3)
			{
				circle<int>c;
				s=&c;
				s->compute();
			}
			else if(choice==4)
			{
			  circle<int>ci;
			  s=&ci;
			  s->computerand();
			}
			
			break;
			
	}
	cout<<"\nDo you want to continue (Y/y) : ";
	cin>>ch;
	}while(ch=='y'||ch=='Y');
	
	return 0;
}
